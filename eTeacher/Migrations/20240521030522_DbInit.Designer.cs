// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eTeacher.Data;

#nullable disable

namespace eTeacher.Migrations
{
    [DbContext(typeof(AddDbContext))]
    [Migration("20240521030522_DbInit")]
    partial class DbInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eTeacher.Data.Classes", b =>
                {
                    b.Property<string>("class_id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("end_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("end_time")
                        .HasColumnType("time");

                    b.Property<int>("number_of_session")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<DateOnly>("start_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("start_time")
                        .HasColumnType("time");

                    b.Property<string>("student_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("subject_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("subject_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tutor_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte>("type_class")
                        .HasColumnType("tinyint");

                    b.HasKey("class_id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("eTeacher.Data.Order", b =>
                {
                    b.Property<string>("order_id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("class_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("order_time")
                        .HasColumnType("datetime2");

                    b.Property<byte>("order_type")
                        .HasColumnType("tinyint");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("wallet_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("order_id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("eTeacher.Data.Qualification", b =>
                {
                    b.Property<string>("qualification_id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("classification")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("graduation_year")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("specialize")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("training_facility")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("qualification_id");

                    b.ToTable("Qualification");
                });

            modelBuilder.Entity("eTeacher.Data.Report", b =>
                {
                    b.Property<string>("report_id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("report_id");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("eTeacher.Data.Requirement", b =>
                {
                    b.Property<string>("requirement_id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateOnly>("end_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("end_time")
                        .HasColumnType("time");

                    b.Property<byte>("grade")
                        .HasColumnType("tinyint");

                    b.Property<int>("number_of_session")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("rank")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateOnly>("start_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("start_time")
                        .HasColumnType("time");

                    b.Property<string>("subject_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("subject_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("requirement_id");

                    b.ToTable("Requirement");
                });

            modelBuilder.Entity("eTeacher.Data.Users", b =>
                {
                    b.Property<string>("user_id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("birth_date")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("link_contact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("phone_number")
                        .HasColumnType("int");

                    b.Property<byte>("rating")
                        .HasColumnType("tinyint");

                    b.Property<byte>("role")
                        .HasColumnType("tinyint");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("wallet_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eTeacher.Data.Wallet", b =>
                {
                    b.Property<string>("wallet_id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("balance")
                        .HasColumnType("float");

                    b.HasKey("wallet_id");

                    b.ToTable("Wallet");
                });
#pragma warning restore 612, 618
        }
    }
}
